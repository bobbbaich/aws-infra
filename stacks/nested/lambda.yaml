AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: This template deploys AWS Lambda functions

Parameters:
  EnvironmentName:
    Type: String
  DBName:
    Type: String
  DBHost:
    Type: String
  DBPort:
    Type: Number
  DBSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
  RDSSecretsArn:
    Type: String
  VpcId:
    Type: AWS::EC2::VPC::Id
  VpcPrivateSubnetIds:
    Type: CommaDelimitedList

Resources:

  SetupDatabaseLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: database_setup.lambda_handler
      Runtime: python3.9
      CodeUri: ../../lambda/database-setup
      Timeout: 45
      VpcConfig:
        SecurityGroupIds:
          - !Ref SetupDatabaseLambdaSG
        SubnetIds: !Ref VpcPrivateSubnetIds
      Environment:
        Variables:
          Environment: !Ref EnvironmentName
          DBName: !Ref DBName
          DBHost: !Ref DBHost
          DBPort: !Ref DBPort
          DBUsername: !Join [ '', [ '{{resolve:secretsmanager:', !Ref RDSSecretsArn, ':SecretString:username}}' ] ]
          DBPassword: !Join [ '', [ '{{resolve:secretsmanager:', !Ref RDSSecretsArn, ':SecretString:password}}' ] ]

  SetupDatabaseLambdaSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: database-setup-pg-lambda-sg
      GroupDescription: Database setup PostgreSQL lambda SG
      VpcId: !Ref VpcId

  LambdaToDatabaseIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: TCP
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !Ref SetupDatabaseLambdaSG
      GroupId: !Ref DBSecurityGroupId

Outputs:
  SetupDatabaseLambda:
    Description: ARN of setup database lambda
    Value: !GetAtt SetupDatabaseLambda.Arn
    Export:
      Name: !Sub ${EnvironmentName}:SetupDatabaseLambda