AWSTemplateFormatVersion: '2010-09-09'
Description: This template deploys CI user that must be used for CI/CD pipelines.
  First deployment is manual by admin user thru AWS CloudFormation console.

Parameters:
  EnvironmentName:
    Type: String

Resources:
  CIUser:
    Type: AWS::IAM::User
    Properties:
      UserName: ci-user

  CIUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref CIUser

  BasicPermissionsCIGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: ci-group-basic-permissions
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSCloudFormationFullAccess'
        - 'arn:aws:iam::aws:policy/IAMFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess'
        - 'arn:aws:iam::aws:policy/CloudWatchLogsFullAccess'
        - 'arn:aws:iam::aws:policy/CloudFrontReadOnlyAccess'

  ApplicationPermissionCIGroups:
    Type: AWS::IAM::Group
    Properties:
      GroupName: ci-group-application
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonECS_FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess'
        - 'arn:aws:iam::aws:policy/SecretsManagerReadWrite'

  BasicPermissionsCIGroupMembership:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: !Ref BasicPermissionsCIGroup
      Users:
        - !Ref CIUser

  ApplicationPermissionCIGroupsMembership:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: !Ref ApplicationPermissionCIGroups
      Users:
        - !Ref CIUser

  CIUserCustomPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: "CI User Custom Policy"
      PolicyDocument:
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Resource": !GetAtt CIUser.Arn,
              "Effect": "Allow"
            }
          ]
        }
      Groups:
        - !Ref BasicPermissionsCIGroup

Outputs:
  CIUserAccessKeyId:
    Description: CI User access key
    Value: !Ref CIUserAccessKey
    Export:
      Name: !Sub ${EnvironmentName}:CIUserAccessKeyId

  CIUserAccessKeySecretAccessKey:
    Description: CI User secret key
    Value: !GetAtt CIUserAccessKey.SecretAccessKey
    Export:
      Name: !Sub ${EnvironmentName}:CIUserAccessKeySecretAccessKey