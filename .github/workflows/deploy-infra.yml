name: Deploy Infrastructure

on: workflow_dispatch

env:
  ENVIRONMENT: development
  AWS_REGION: us-east-1

jobs:
  deploy-vpc:
    name: Deploy VPC
    environment: development
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - id: deploy-vpc
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.ENVIRONMENT }}-vpc
          template: stacks/vpc.yaml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: "EnvironmentName=${{ env.ENVIRONMENT }}"

  deploy-s3:
    name: Deploy S3 Buckets
    environment: development
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - id: deploy-s3
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.ENVIRONMENT }}-s3
          template: stacks/s3.yaml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: "EnvironmentName=${{ env.ENVIRONMENT }}"

  deploy-ecs-roles:
    name: Deploy ECS Roles
    environment: development
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - id: deploy-ecs-roles
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.ENVIRONMENT }}-ecs-roles
          template: stacks/ecs-roles.yaml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: "EnvironmentName=${{ env.ENVIRONMENT }}"

  deploy-s3-lambda:
    needs: deploy-s3
    name: Deploy Lambda functions
    environment: development
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: vimtor/action-zip@v1
        with:
          files: lambda/database-setup/
          dest: database-setup.zip
      - uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
          aws_bucket: ${{ env.ENVIRONMENT }}-lambda-${{ secrets.AWS_ACCOUNT_ID }}
          destination_dir: 'aws-infra'
          source_dir: 'lambda'

  deploy-ecs-cluster:
    needs: [ deploy-vpc, deploy-ecs-roles, deploy-s3 ]
    name: Deploy ECS Cluster
    environment: development
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - id: deploy-ecs-cluster
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.ENVIRONMENT }}-poc-cluster
          template: stacks/ecs-cluster.yaml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: "EnvironmentName=${{ env.ENVIRONMENT }}"

  deploy-database:
    needs: deploy-ecs-cluster
    name: Deploy RDS
    environment: development
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - id: deploy-rds
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.ENVIRONMENT }}-rds
          template: stacks/rds.yaml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: "EnvironmentName=${{ env.ENVIRONMENT }}"